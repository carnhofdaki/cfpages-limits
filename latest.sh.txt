#!/bin/sh
#
# No limits for prunednode.today, worldwide fast
# Courtesy of CloudFlare (now free of IPFS, at least
# for us on this level)
#
# This is a shell script which downloads all the files
# one by one and joins them to the original latest.zip
# for which Stepan's signature is made.
#
# Requirements: wget, cat, rm, sha256sum, grep, ln, gpg

URL=https://cfpages-limits.pages.dev

# Some functions
#
# getparts downloads parts and assembles
# the latest.zip from them
getparts() {
  test -r files.txt || wget -q $URL/files.txt
  LINES=$(wc -l files.txt | cut -d" " -f1)
  N=0
  while read file
  do
    N=$((N+1))
    echo "Processing file $file ($N of $LINES)..."
    wget -qO $file $URL/$file
    cat $file >> latest.zip
    rm -rf $file
  done < files.txt
}

test -w latest.zip && {
  echo "The file latest.zip already exists."
  printf "Would you like to overwrite it? [y/N]: "
  read answer
  ! test "$answer" = "y" -o "$answer" = "Y" || {
    > latest.zip
    false
  }
} || getparts
ls latest.zip || exit 1

# Here we assume that latest.zip file is in $PWD
# either downloaded now or from previous run

F=latest.signed.txt
test -s $F || {
  echo "Downloading $F ..."
  wget -q $URL/$F || exit 1
}
# Check Stephan's signature on the checksum file
SIG=ss-specter-release.asc
TMP=$(mktemp -d)
test -s $SIG || wget -q https://stepansnigirev.com/$SIG
test -r $SIG.gpg || gpg --dearmor $SIG
gpg \
  --homedir $TMP \
  --dry-run --no-default-keyring \
  --keyring ./$SIG.gpg --verify $F \
  || { echo "Signature not valid! Exiting." >&2; exit 1; }
SN=$(grep -oE 'snapshot[0-9]{6}.zip' $F)
ln -nfv latest.zip $SN
echo "Verifying SHA256 of $SN..."
sha256sum -c $F 2>/dev/null && rm -rf $TMP
